apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service
  labels:
    app: user-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user-service
  template:
    metadata:
      labels:
        app: user-service
    spec:
      containers:
      - name: user-service
        image: subashreedinesh/user-service:latest
        ports:
        - containerPort: 4000
        env:
        - name: NODE_ENV
          value: "production"  # Ensure production environment is set
        - name: REDIS_HOST
          value: "redis.default.svc.cluster.local"  # FQDN for Redis service
        - name: REDIS_PORT
          value: "6379"  # Default Redis port
        readinessProbe:
          httpGet:
            path: /health  # Ensure a health endpoint is implemented in your user-service
            port: 4000
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health  # Ensure a health endpoint is implemented in your user-service
            port: 4000
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            memory: "512Mi"
            cpu: "500m"
          requests:
            memory: "256Mi"
            cpu: "250m"

---
apiVersion: v1
kind: Service
metadata:
  name: user-service
spec:
  selector:
    app: user-service
  ports:
    - protocol: TCP
      port: 4000
      targetPort: 4000
  type: ClusterIP
