apiVersion: apps/v1
kind: Deployment
metadata:
  name: socket-service
  labels:
    app: socket-service
spec:
  replicas: 1  
  selector:
    matchLabels:
      app: socket-service
  template:
    metadata:
      labels:
        app: socket-service
    spec:
      containers:
      - name: socket-service
        image: subashreedinesh/socket-service:latest 
        ports:
        - containerPort: 3001  
        env:
        - name: NODE_ENV
          value: "production"
        - name: REDIS_HOST
          value: "redis" # Ensure this matches the Redis service name
        - name: ROOM_SERVICE_URL
          value: "http://room-service:5050" # Add this to communicate with room-service
        readinessProbe:
          httpGet:
            path: /health # Update with the actual health endpoint of your socket-service
            port: 3001
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health # Update with the actual health endpoint of your socket-service
            port: 3001
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            memory: "512Mi" 
            cpu: "500m"      
          requests:
            memory: "256Mi"  
            cpu: "250m"     

---
apiVersion: v1
kind: Service
metadata:
  name: socket-service
spec:
  selector:
    app: socket-service
  ports:
    - protocol: TCP
      port: 80  
      targetPort: 3001  
  type: ClusterIP